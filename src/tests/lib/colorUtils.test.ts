import { buildColorsForLegend, generateColorArray, generateLegend } from '@/lib/colorUtils.ts'
import { describe, expect, it } from 'vitest'

describe('buildColorsForLegend', () => {
  it('default colors are built correctly', () => {
    const expected = [
      [0.8, 0.15999999999999998, 0.15999999999999998],
      [0.5952000000000001, 0.8, 0.15999999999999998],
      [0.15999999999999998, 0.8, 0.5696000000000001]
    ]
    expect(buildColorsForLegend(3)).toEqual(expected)
  })
})

describe('generateLegend', () => {
  it('generate legend', () => {
    const expected = [
      {
        minValueForColor: 0,
        color: [0.8, 0.15999999999999998, 0.15999999999999998]
      },
      {
        minValueForColor: 1,
        color: [0.8, 0.5220571428571429, 0.15999999999999998]
      },
      {
        minValueForColor: 2,
        color: [0.7158857142857142, 0.8, 0.15999999999999998]
      },
      {
        minValueForColor: 3,
        color: [0.35382857142857144, 0.8, 0.15999999999999998]
      },
      {
        minValueForColor: 4,
        color: [0.15999999999999998, 0.8, 0.3282285714285714]
      },
      {
        minValueForColor: 5,
        color: [0.15999999999999998, 0.8, 0.6902857142857144]
      },
      {
        minValueForColor: 6,
        color: [0.15999999999999998, 0.547657142857143, 0.8]
      }
    ]
    expect(generateLegend(0, 7)).toEqual(expected)
  })
})

describe('generateColorArray', () => {
  it('generate color array', () => {
    const expected = new Float32Array([
      0.15999999999999998, 0.547657142857143, 0.8, 0.15999999999999998, 0.547657142857143, 0.8, 0.15999999999999998,
      0.547657142857143, 0.8, 0.15999999999999998, 0.547657142857143, 0.8, 0.15999999999999998, 0.547657142857143, 0.8,
      0.15999999999999998, 0.547657142857143, 0.8, 0.15999999999999998, 0.547657142857143, 0.8, 0.15999999999999998,
      0.547657142857143, 0.8, 0.15999999999999998, 0.547657142857143, 0.8, 0.15999999999999998, 0.547657142857143, 0.8,
      0.15999999999999998, 0.547657142857143, 0.8, 0.15999999999999998, 0.547657142857143, 0.8, 0.8,
      0.15999999999999998, 0.15999999999999998, 0.8, 0.15999999999999998, 0.15999999999999998, 0.8, 0.15999999999999998,
      0.15999999999999998, 0.8, 0.15999999999999998, 0.15999999999999998, 0.8, 0.15999999999999998, 0.15999999999999998,
      0.8, 0.15999999999999998, 0.15999999999999998, 0.8, 0.15999999999999998, 0.15999999999999998, 0.8,
      0.15999999999999998, 0.15999999999999998, 0.8, 0.15999999999999998, 0.15999999999999998, 0.8, 0.15999999999999998,
      0.15999999999999998, 0.8, 0.15999999999999998, 0.15999999999999998, 0.8, 0.15999999999999998, 0.15999999999999998,
      0.35382857142857144, 0.8, 0.15999999999999998, 0.35382857142857144, 0.8, 0.15999999999999998, 0.35382857142857144,
      0.8, 0.15999999999999998, 0.35382857142857144, 0.8, 0.15999999999999998, 0.35382857142857144, 0.8,
      0.15999999999999998, 0.35382857142857144, 0.8, 0.15999999999999998, 0.35382857142857144, 0.8, 0.15999999999999998,
      0.35382857142857144, 0.8, 0.15999999999999998, 0.35382857142857144, 0.8, 0.15999999999999998, 0.35382857142857144,
      0.8, 0.15999999999999998, 0.35382857142857144, 0.8, 0.15999999999999998, 0.35382857142857144, 0.8,
      0.15999999999999998
    ])
    expect(generateColorArray([7, 0, 3], 0, 7)).toEqual(expected)
  })
})
